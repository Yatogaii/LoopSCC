from cfg import CFG
from int import INT
from spath_graph import SPath_Graph
from summarizer import Summarizer

x, y, det = INT.define_int("x"), INT.define_int("y"), INT.define_int("det")

loop = CFG.define_loop([[x > 0]], [
    (
        (x, x + 1),
    ),
    [
        ([[det != 0]], [
            (
                (y, y + 1),
            )
        ]),
        ([[det == 0]], [
            [
                ([[y > 0]], [
                    (
                        (y, 0),
                    )
                ]),
                ([[y <= 0]], [
                    ()
                ])
            ]
        ]),
    ],
])

spg = SPath_Graph(loop)
summarizer = Summarizer(spg)
summarizer.summarize()
tests = [
    [(x, -5860024), (y, 9591339), (det, 1), ],
    [(x, -2336858), (y, -3418942), (det, 1), ],
    [(x, -6102363), (y, 9882088), (det, 1), ],
    [(x, -8548786), (y, 2490136), (det, 1), ],
    [(x, -7819752), (y, 6014242), (det, 1), ],
    [(x, -573754), (y, 4535145), (det, 1), ],
    [(x, -708181), (y, 7113526), (det, 1), ],
    [(x, -4982066), (y, 4927301), (det, 1), ],
    [(x, -7203323), (y, -8755905), (det, 1), ],
    [(x, -4354505), (y, -4922878), (det, 1), ],
    [(x, -148764), (y, 8875628), (det, 1), ],
    [(x, -1261889), (y, -7234898), (det, 1), ],
    [(x, -9690832), (y, -6541847), (det, 1), ],
    [(x, -412655), (y, -2076654), (det, 1), ],
    [(x, -6514843), (y, 2965397), (det, 1), ],
    [(x, -5789254), (y, 7929993), (det, 1), ],
    [(x, -4600149), (y, -4534074), (det, 1), ],
    [(x, -3836447), (y, 2706323), (det, 1), ],
    [(x, -2761612), (y, 219314), (det, 1), ],
    [(x, -918213), (y, 8299386), (det, 1), ],
    [(x, -3862277), (y, 332032), (det, 1), ],
    [(x, -1948688), (y, 292134), (det, 1), ],
    [(x, -1214421), (y, 3449009), (det, 1), ],
    [(x, -1903237), (y, -3279433), (det, 1), ],
    [(x, -9974405), (y, 3959180), (det, 1), ],
    [(x, -8827213), (y, -3913079), (det, 1), ],
    [(x, -3284746), (y, -2608178), (det, 1), ],
    [(x, -6003370), (y, -4853189), (det, 1), ],
    [(x, -4295166), (y, -9019056), (det, 1), ],
    [(x, -8234810), (y, 5439598), (det, 1), ],
    [(x, -4279333), (y, 7413820), (det, 1), ],
    [(x, -1582902), (y, -7289658), (det, 1), ],
    [(x, -9087035), (y, 6479818), (det, 1), ],
    [(x, -6343292), (y, -2723032), (det, 1), ],
    [(x, -6196602), (y, 8314584), (det, 1), ],
    [(x, -7919659), (y, -2221060), (det, 1), ],
    [(x, -2543425), (y, 2051555), (det, 1), ],
    [(x, -9759367), (y, -885001), (det, 1), ],
    [(x, -4349870), (y, -4931074), (det, 1), ],
    [(x, -4236809), (y, -5977342), (det, 1), ],
    [(x, -5834982), (y, -4779440), (det, 1), ],
    [(x, -2732362), (y, 9707898), (det, 1), ],
    [(x, -7147195), (y, 2107947), (det, 1), ],
    [(x, -2857668), (y, -4130149), (det, 1), ],
    [(x, -4075340), (y, -6093682), (det, 1), ],
    [(x, -1149161), (y, -520972), (det, 1), ],
    [(x, -7100993), (y, 9108378), (det, 1), ],
    [(x, -7717315), (y, -5795853), (det, 1), ],
    [(x, -9293649), (y, 8800119), (det, 1), ],
    [(x, -2311111), (y, 9775276), (det, 1), ],
    [(x, -4871991), (y, 3857545), (det, 0), ],
    [(x, -589185), (y, 8458134), (det, 0), ],
    [(x, -8111996), (y, 9204979), (det, 0), ],
    [(x, -2258139), (y, 5033074), (det, 0), ],
    [(x, -8985704), (y, 6458999), (det, 0), ],
    [(x, -6843807), (y, -5175435), (det, 0), ],
    [(x, -4149093), (y, -3403515), (det, 0), ],
    [(x, -6575949), (y, 4791937), (det, 0), ],
    [(x, -6081059), (y, -5651903), (det, 0), ],
    [(x, -8591577), (y, 6572807), (det, 0), ],
    [(x, -9297915), (y, 2141363), (det, 0), ],
    [(x, -8343158), (y, -3292706), (det, 0), ],
    [(x, -6070924), (y, 1509390), (det, 0), ],
    [(x, -7029822), (y, 3650165), (det, 0), ],
    [(x, -8864881), (y, 4188648), (det, 0), ],
    [(x, -5004039), (y, -4485595), (det, 0), ],
    [(x, -5533139), (y, -97877), (det, 0), ],
    [(x, -9437058), (y, -1447968), (det, 0), ],
    [(x, -2298134), (y, -4103531), (det, 0), ],
    [(x, -6600863), (y, -8056033), (det, 0), ],
    [(x, -1183535), (y, -1099036), (det, 0), ],
    [(x, -3180592), (y, 3664826), (det, 0), ],
    [(x, -7928089), (y, -956563), (det, 0), ],
    [(x, -801583), (y, 8620814), (det, 0), ],
    [(x, -1724350), (y, 5928462), (det, 0), ],
    [(x, -9160164), (y, 3528226), (det, 0), ],
    [(x, -2944000), (y, 1032585), (det, 0), ],
    [(x, -787633), (y, 1152242), (det, 0), ],
    [(x, -9999414), (y, -4615205), (det, 0), ],
    [(x, -728004), (y, -4173817), (det, 0), ],
    [(x, -3929089), (y, 4912782), (det, 0), ],
    [(x, -7083920), (y, -6348348), (det, 0), ],
    [(x, -4176869), (y, 1028328), (det, 0), ],
    [(x, -5876921), (y, -2713854), (det, 0), ],
    [(x, -4947947), (y, -8475915), (det, 0), ],
    [(x, -939277), (y, 3177974), (det, 0), ],
    [(x, -6088518), (y, 3673796), (det, 0), ],
    [(x, -7807923), (y, -9949), (det, 0), ],
    [(x, -8002390), (y, 2238572), (det, 0), ],
    [(x, -214139), (y, 5518733), (det, 0), ],
    [(x, -212403), (y, 6623759), (det, 0), ],
    [(x, -2883141), (y, 940881), (det, 0), ],
    [(x, -7945594), (y, 3060742), (det, 0), ],
    [(x, -7510063), (y, -300985), (det, 0), ],
    [(x, -1139374), (y, 7140948), (det, 0), ],
    [(x, -6311945), (y, -4271027), (det, 0), ],
    [(x, -838931), (y, -2951707), (det, 0), ],
    [(x, -443621), (y, -4449154), (det, 0), ],
    [(x, -4071869), (y, 351886), (det, 0), ],
    [(x, -8399483), (y, 1297874), (det, 0), ],
]
for test in tests:
    result = summarizer.solve(test)
    x_val = result[0][1]
    y_val = result[1][1]
    print(f"x = {x_val}")
    print(f"y = {y_val}")
