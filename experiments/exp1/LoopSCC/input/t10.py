from cfg import CFG
from int import INT
from spath_graph import SPath_Graph
from summarizer import Summarizer

x, y, det = INT.define_int("x"), INT.define_int("y"), INT.define_int("det")

loop = CFG.define_loop([[x > y]], [
    [
        ([[det == 1]], [
            (
                (y, y + 1),
            )
        ]),
        ([[det != 1]], [
            (
                (x, x - 1),
            )
        ]),
    ]
])

spg = SPath_Graph(loop)
summarizer = Summarizer(spg)
summarizer.summarize()
tests = [
    [(x, -774770), (y, -3479164), (det, 1), ],
    [(x, 1856811), (y, 6040268), (det, 1), ],
    [(x, -563590), (y, 4397168), (det, 1), ],
    [(x, 3763483), (y, -484969), (det, 1), ],
    [(x, -1932684), (y, 2246339), (det, 1), ],
    [(x, -6178827), (y, 6506685), (det, 1), ],
    [(x, 8474469), (y, 2489248), (det, 1), ],
    [(x, -1011359), (y, -9349675), (det, 1), ],
    [(x, 912544), (y, 3913093), (det, 1), ],
    [(x, -6223599), (y, -8532300), (det, 1), ],
    [(x, 7320806), (y, 1956063), (det, 1), ],
    [(x, -4485833), (y, -6721412), (det, 1), ],
    [(x, -6282667), (y, -1984575), (det, 1), ],
    [(x, 7196456), (y, -765079), (det, 1), ],
    [(x, 7264395), (y, -1115504), (det, 1), ],
    [(x, -1427718), (y, 4316313), (det, 1), ],
    [(x, -6992448), (y, 8789995), (det, 1), ],
    [(x, 4558699), (y, 9779378), (det, 1), ],
    [(x, -6282108), (y, 7238893), (det, 1), ],
    [(x, -318290), (y, -5955858), (det, 1), ],
    [(x, -6062608), (y, -1164079), (det, 1), ],
    [(x, -8346900), (y, -7995842), (det, 1), ],
    [(x, 3320800), (y, -4111980), (det, 1), ],
    [(x, -3924584), (y, -6633204), (det, 1), ],
    [(x, 9845520), (y, 6064221), (det, 1), ],
    [(x, 4091216), (y, -5369382), (det, 1), ],
    [(x, -6827099), (y, 2008937), (det, 1), ],
    [(x, 9367221), (y, 9482301), (det, 1), ],
    [(x, -8390272), (y, -8912983), (det, 1), ],
    [(x, 2431965), (y, -5016418), (det, 1), ],
    [(x, -3988530), (y, -4918065), (det, 1), ],
    [(x, 4984209), (y, 541353), (det, 1), ],
    [(x, -3036924), (y, 574285), (det, 1), ],
    [(x, -4843686), (y, 1900), (det, 1), ],
    [(x, -5076834), (y, -4861493), (det, 1), ],
    [(x, 8671403), (y, -3120416), (det, 1), ],
    [(x, 2431459), (y, -3533906), (det, 1), ],
    [(x, -4188481), (y, -3448844), (det, 1), ],
    [(x, -3617236), (y, 4150309), (det, 1), ],
    [(x, -4343994), (y, -5817725), (det, 1), ],
    [(x, -9487100), (y, -6338131), (det, 1), ],
    [(x, 6735734), (y, -71605), (det, 1), ],
    [(x, 3006613), (y, -6214661), (det, 1), ],
    [(x, 5476559), (y, -8850678), (det, 1), ],
    [(x, 9821672), (y, -7161841), (det, 1), ],
    [(x, 328225), (y, -8128411), (det, 1), ],
    [(x, 3148262), (y, -5412679), (det, 1), ],
    [(x, 7732034), (y, 4878045), (det, 1), ],
    [(x, -5987884), (y, 3806979), (det, 1), ],
    [(x, -1580406), (y, -2200792), (det, 1), ],
    [(x, -3968851), (y, -6185958), (det, 0), ],
    [(x, -4337522), (y, 9421511), (det, 0), ],
    [(x, -732095), (y, 6934165), (det, 0), ],
    [(x, 2334560), (y, 167540), (det, 0), ],
    [(x, -1228550), (y, 8472705), (det, 0), ],
    [(x, 9562014), (y, 2909533), (det, 0), ],
    [(x, -4751105), (y, 9802705), (det, 0), ],
    [(x, -4440077), (y, 1276598), (det, 0), ],
    [(x, -6576237), (y, 9798683), (det, 0), ],
    [(x, 8677389), (y, 8372077), (det, 0), ],
    [(x, 8761861), (y, 272044), (det, 0), ],
    [(x, 7808534), (y, -367502), (det, 0), ],
    [(x, 6224015), (y, -3864318), (det, 0), ],
    [(x, 7321265), (y, -1233297), (det, 0), ],
    [(x, 6680879), (y, 3816713), (det, 0), ],
    [(x, -5684485), (y, 9726262), (det, 0), ],
    [(x, 3853939), (y, 8812815), (det, 0), ],
    [(x, 7024623), (y, 2398613), (det, 0), ],
    [(x, -1598133), (y, 2792428), (det, 0), ],
    [(x, 2240047), (y, -3416824), (det, 0), ],
    [(x, -102858), (y, -1127611), (det, 0), ],
    [(x, -8264888), (y, 9266672), (det, 0), ],
    [(x, 9903470), (y, -2888299), (det, 0), ],
    [(x, 8274217), (y, -5652432), (det, 0), ],
    [(x, -7604862), (y, 6623575), (det, 0), ],
    [(x, 4843536), (y, -7500955), (det, 0), ],
    [(x, -2533967), (y, -6948396), (det, 0), ],
    [(x, -1594739), (y, -6038187), (det, 0), ],
    [(x, 4664788), (y, -184270), (det, 0), ],
    [(x, -7766611), (y, -8989344), (det, 0), ],
    [(x, 1691259), (y, 3297416), (det, 0), ],
    [(x, 7820353), (y, 2503639), (det, 0), ],
    [(x, 8285001), (y, 9240964), (det, 0), ],
    [(x, 784213), (y, -7454042), (det, 0), ],
    [(x, 4434785), (y, -864136), (det, 0), ],
    [(x, 3355912), (y, 5245196), (det, 0), ],
    [(x, -6918049), (y, 1253898), (det, 0), ],
    [(x, -2649491), (y, 3536680), (det, 0), ],
    [(x, -5288055), (y, 2533601), (det, 0), ],
    [(x, 9720179), (y, -9006325), (det, 0), ],
    [(x, -2787542), (y, -5465843), (det, 0), ],
    [(x, 2249227), (y, 6819167), (det, 0), ],
    [(x, -4566748), (y, -3561729), (det, 0), ],
    [(x, -7348329), (y, -4978235), (det, 0), ],
    [(x, -4368962), (y, 6335808), (det, 0), ],
    [(x, 7869621), (y, 8610173), (det, 0), ],
    [(x, 6150831), (y, 9811464), (det, 0), ],
    [(x, -1487617), (y, 1712690), (det, 0), ],
    [(x, 8963852), (y, 9187905), (det, 0), ],
    [(x, 6689217), (y, -234963), (det, 0), ],
]
for test in tests:
    result = summarizer.solve(test)
    x_val = result[0][1]
    y_val = result[1][1]
    print(f"x = {x_val}")
    print(f"y = {y_val}")
