from cfg import CFG
from int import INT
from pfg import PFG
from summarizer import Summarizer

x, det = INT.define_int("x"), INT.define_int("det")

var_map = {"x": x, "det": det}

loop1 = CFG.define_loop([[x < 100, det != 1]], [
    [
        ([[x == x]], [
            (
                (x, x + 1),
            )
        ]),
    ]
])

loop2 = CFG.define_loop([[x < 100]], [
    [
        ([[x == x]], [
            (
                (x, x + 1),
            )
        ]),
    ]
])

pfg = PFG(loop1)
summarizer = Summarizer(pfg)
summarizer.summarize()

pfg2 = PFG(loop2)
summarizer2 = Summarizer(pfg2)
summarizer2.summarize()
tests = [
    [(x, 7604345), (det, 1), ],
    [(x, -1929349), (det, 1), ],
    [(x, -3732269), (det, 1), ],
    [(x, -5794149), (det, 1), ],
    [(x, 8719371), (det, 1), ],
    [(x, 2874115), (det, 1), ],
    [(x, -2725132), (det, 1), ],
    [(x, 5133172), (det, 1), ],
    [(x, -3334457), (det, 1), ],
    [(x, -6490640), (det, 1), ],
    [(x, 6047296), (det, 1), ],
    [(x, 2858548), (det, 1), ],
    [(x, 7340892), (det, 1), ],
    [(x, -512232), (det, 1), ],
    [(x, -240539), (det, 1), ],
    [(x, -9415059), (det, 1), ],
    [(x, 4405249), (det, 1), ],
    [(x, -213359), (det, 1), ],
    [(x, 6394920), (det, 1), ],
    [(x, -3344273), (det, 1), ],
    [(x, -3889312), (det, 1), ],
    [(x, -6667412), (det, 1), ],
    [(x, 8282900), (det, 1), ],
    [(x, -5932555), (det, 1), ],
    [(x, 6811599), (det, 1), ],
    [(x, 7303032), (det, 1), ],
    [(x, 1925497), (det, 1), ],
    [(x, -9097499), (det, 1), ],
    [(x, -4115604), (det, 1), ],
    [(x, 4032511), (det, 1), ],
    [(x, 7325888), (det, 1), ],
    [(x, 6401864), (det, 1), ],
    [(x, 5781924), (det, 1), ],
    [(x, 6752971), (det, 1), ],
    [(x, -9311864), (det, 1), ],
    [(x, 9354862), (det, 1), ],
    [(x, -7616100), (det, 1), ],
    [(x, -730477), (det, 1), ],
    [(x, -3049983), (det, 1), ],
    [(x, 5711999), (det, 1), ],
    [(x, 6667000), (det, 1), ],
    [(x, 8093103), (det, 1), ],
    [(x, 7560916), (det, 1), ],
    [(x, 5728415), (det, 1), ],
    [(x, -3273362), (det, 1), ],
    [(x, -7410830), (det, 1), ],
    [(x, -1206701), (det, 1), ],
    [(x, 5588507), (det, 1), ],
    [(x, 6196875), (det, 1), ],
    [(x, 7259108), (det, 1), ],
    [(x, -8300471), (det, 0), ],
    [(x, 2737804), (det, 0), ],
    [(x, -459260), (det, 0), ],
    [(x, -2017231), (det, 0), ],
    [(x, -1254031), (det, 0), ],
    [(x, -1816889), (det, 0), ],
    [(x, -6146852), (det, 0), ],
    [(x, -7398736), (det, 0), ],
    [(x, 5337748), (det, 0), ],
    [(x, -2295952), (det, 0), ],
    [(x, -3896855), (det, 0), ],
    [(x, -3443346), (det, 0), ],
    [(x, 6887062), (det, 0), ],
    [(x, -9908061), (det, 0), ],
    [(x, -9387357), (det, 0), ],
    [(x, -5846111), (det, 0), ],
    [(x, 5102176), (det, 0), ],
    [(x, -3451994), (det, 0), ],
    [(x, -7751793), (det, 0), ],
    [(x, -9695166), (det, 0), ],
    [(x, -9507949), (det, 0), ],
    [(x, 747031), (det, 0), ],
    [(x, -9575349), (det, 0), ],
    [(x, 4046509), (det, 0), ],
    [(x, 9769855), (det, 0), ],
    [(x, -7060842), (det, 0), ],
    [(x, -5789696), (det, 0), ],
    [(x, 8929694), (det, 0), ],
    [(x, 1877696), (det, 0), ],
    [(x, 8275776), (det, 0), ],
    [(x, 5608153), (det, 0), ],
    [(x, 186270), (det, 0), ],
    [(x, 2068069), (det, 0), ],
    [(x, -5742490), (det, 0), ],
    [(x, -5992723), (det, 0), ],
    [(x, -5579521), (det, 0), ],
    [(x, 1488987), (det, 0), ],
    [(x, -3052972), (det, 0), ],
    [(x, -543706), (det, 0), ],
    [(x, 1673160), (det, 0), ],
    [(x, 1554694), (det, 0), ],
    [(x, 7607915), (det, 0), ],
    [(x, -8815103), (det, 0), ],
    [(x, -4190154), (det, 0), ],
    [(x, -2661825), (det, 0), ],
    [(x, -7232284), (det, 0), ],
    [(x, 7354488), (det, 0), ],
    [(x, -1177470), (det, 0), ],
    [(x, 5397933), (det, 0), ],
    [(x, 6800946), (det, 0), ],
]
for test in tests:
    # res1 = List[tuple('symbol_name', 'symbol_var')]
    res1 = summarizer.solve(test)

    x_val = res1[0][1]

    result = summarizer2.solve([(x, x_val)])
    x_val = result[0][1]
    print(f"x = {x_val}")
