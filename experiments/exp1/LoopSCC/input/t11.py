from cfg import CFG
from int import INT
from spath_graph import SPath_Graph
from summarizer import Summarizer

x, y = INT.define_int("x"), INT.define_int("y")

loop = CFG.define_loop([[x < 100]], [
    [
        ([[y < 30]], [
            (
                (y, y + 1),
            )
        ]),
        ([[y >= 30]], [
            (
                (x, x + 1),
            )
        ]),
    ]
])

spg = SPath_Graph(loop)
summarizer = Summarizer(spg)
summarizer.summarize()
tests = [
    [(x, -6115579), (y, 794677), ],
    [(x, 5376443), (y, -7364766), ],
    [(x, 4153239), (y, 4616164), ],
    [(x, 4568345), (y, -1421945), ],
    [(x, 9711274), (y, 7864256), ],
    [(x, 1527648), (y, 3543371), ],
    [(x, 7182774), (y, 1063267), ],
    [(x, 5631263), (y, 3224022), ],
    [(x, 5866488), (y, 3852629), ],
    [(x, -1096344), (y, -9251026), ],
    [(x, -1905506), (y, 1719618), ],
    [(x, 920718), (y, -1572005), ],
    [(x, -1364026), (y, 4262452), ],
    [(x, 5555264), (y, 7444625), ],
    [(x, -1783158), (y, -7704314), ],
    [(x, 3584612), (y, -8172148), ],
    [(x, 9538934), (y, -2607982), ],
    [(x, -1760929), (y, 1259934), ],
    [(x, -6484501), (y, 7830736), ],
    [(x, 266532), (y, 976538), ],
    [(x, -6920759), (y, -3112254), ],
    [(x, -4056969), (y, 2686034), ],
    [(x, -8426579), (y, 5847769), ],
    [(x, 5496317), (y, 3846909), ],
    [(x, 2691942), (y, 6825777), ],
    [(x, -7458734), (y, 9195559), ],
    [(x, -4062117), (y, 6911666), ],
    [(x, 7550573), (y, -3622155), ],
    [(x, -7358162), (y, 2526101), ],
    [(x, -6170717), (y, 9266596), ],
    [(x, -9403532), (y, -584999), ],
    [(x, 1840463), (y, 1186254), ],
    [(x, -9081410), (y, -8858093), ],
    [(x, 5940305), (y, -7352038), ],
    [(x, 3147047), (y, -3188096), ],
    [(x, 9125252), (y, -3667999), ],
    [(x, -5516428), (y, -5462804), ],
    [(x, -6645342), (y, -8834786), ],
    [(x, 3908824), (y, 5585256), ],
    [(x, 9974873), (y, -3131429), ],
    [(x, 5502625), (y, -1692245), ],
    [(x, 1923527), (y, -5750186), ],
    [(x, 7625844), (y, -1006708), ],
    [(x, -5982109), (y, 4585967), ],
    [(x, -7518999), (y, 4578259), ],
    [(x, 6417417), (y, -6233112), ],
    [(x, 6744016), (y, 2550152), ],
    [(x, 4567817), (y, 7566542), ],
    [(x, -2536620), (y, 2129008), ],
    [(x, 1992026), (y, 2692796), ],
    [(x, 5689125), (y, 785615), ],
    [(x, -5649964), (y, -1948512), ],
    [(x, -5707153), (y, 5507392), ],
    [(x, 589239), (y, 8086943), ],
    [(x, 4901991), (y, -9684976), ],
    [(x, 5821053), (y, 419484), ],
    [(x, 348452), (y, 1708453), ],
    [(x, 2039557), (y, 9680787), ],
    [(x, 3594104), (y, 5350948), ],
    [(x, 9684469), (y, -3173586), ],
    [(x, -3549505), (y, 6282983), ],
    [(x, -7484076), (y, -9034411), ],
    [(x, 5377063), (y, 6222928), ],
    [(x, 9123909), (y, -2198702), ],
    [(x, -570314), (y, -6151043), ],
    [(x, -2068268), (y, 2212960), ],
    [(x, -8466767), (y, 4111831), ],
    [(x, -260043), (y, -8915114), ],
    [(x, 2001268), (y, 4121876), ],
    [(x, 1993376), (y, 8510965), ],
    [(x, -9608797), (y, 336810), ],
    [(x, -2428202), (y, 4477300), ],
    [(x, 8711209), (y, -8947042), ],
    [(x, 7977200), (y, 1658876), ],
    [(x, -9857607), (y, 9708510), ],
    [(x, 2757358), (y, 1266164), ],
    [(x, -9090402), (y, 963119), ],
    [(x, 7000219), (y, -251947), ],
    [(x, -6926358), (y, 7076253), ],
    [(x, -876219), (y, -8435455), ],
    [(x, 7172007), (y, -4030512), ],
    [(x, -409704), (y, 8458780), ],
    [(x, 3963043), (y, -9503980), ],
    [(x, -3662108), (y, -239804), ],
    [(x, 5074515), (y, -7832864), ],
    [(x, 963024), (y, 5863164), ],
    [(x, 3014437), (y, -1589182), ],
    [(x, -8454725), (y, -8871379), ],
    [(x, -8984328), (y, -3974645), ],
    [(x, -6317895), (y, 7964648), ],
    [(x, 2699245), (y, 8215643), ],
    [(x, 7051681), (y, -2131294), ],
    [(x, 7108642), (y, 8110729), ],
    [(x, 8073129), (y, 5391333), ],
    [(x, -1729836), (y, 1685751), ],
    [(x, -7372927), (y, -6505275), ],
    [(x, -5106568), (y, 4734541), ],
    [(x, 1117175), (y, 465179), ],
    [(x, 5390914), (y, -5867063), ],
    [(x, 8166230), (y, 2189026), ],
]
for test in tests:
    result = summarizer.solve(test)
    for symbol_val in result:
        print(f"{symbol_val[0]} = {symbol_val[1]}")
