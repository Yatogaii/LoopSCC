from cfg import CFG
from int import INT
from spath_graph import SPath_Graph
from summarizer import Summarizer

x, y = INT.define_int("x"), INT.define_int("y")

loop = CFG.define_loop([[x < 100], [y < 30]], [
    [
        ([[x < 100]], [
            (
                (x, x + 1),
                (y, y + 1),
            )
        ]),
        ([[x >= 100, y < 30]], [
            (
                (x, x + 1),
                (y, y + 1),
            )
        ]),
    ]
])

spg = SPath_Graph(loop)
summarizer = Summarizer(spg)
summarizer.summarize()
tests = [
    [(x, 3651534), (y, -5117292), ],
    [(x, 6291811), (y, 1120970), ],
    [(x, -550689), (y, -9879456), ],
    [(x, 7906024), (y, 4413535), ],
    [(x, 1656771), (y, 6441850), ],
    [(x, -1392143), (y, 8339909), ],
    [(x, 6928039), (y, 9641018), ],
    [(x, -6271283), (y, -4341242), ],
    [(x, -835014), (y, -7212289), ],
    [(x, -5875029), (y, -4397395), ],
    [(x, 8966148), (y, 4755338), ],
    [(x, -2422352), (y, -3669067), ],
    [(x, 544240), (y, 2965436), ],
    [(x, 6870267), (y, -9933713), ],
    [(x, -4470558), (y, 6203806), ],
    [(x, -6360816), (y, -740771), ],
    [(x, -8615495), (y, -4006376), ],
    [(x, -2776995), (y, -1991416), ],
    [(x, -2960149), (y, 7943370), ],
    [(x, -8055553), (y, -2754553), ],
    [(x, -6629404), (y, 4594569), ],
    [(x, 6226156), (y, 1612298), ],
    [(x, 7934466), (y, -2028803), ],
    [(x, -154895), (y, 9704112), ],
    [(x, 3145809), (y, -6640758), ],
    [(x, -7711542), (y, 624196), ],
    [(x, 2442077), (y, 1600915), ],
    [(x, 6123842), (y, 8119126), ],
    [(x, -3774369), (y, -2686871), ],
    [(x, -1030667), (y, 7661467), ],
    [(x, -6692430), (y, -705251), ],
    [(x, 3848339), (y, -9229599), ],
    [(x, -765181), (y, -5791343), ],
    [(x, -3757711), (y, -2178669), ],
    [(x, 4128550), (y, 751601), ],
    [(x, 7636493), (y, -3908798), ],
    [(x, 6119360), (y, 2477062), ],
    [(x, 2180771), (y, 9356274), ],
    [(x, 4603738), (y, -5603412), ],
    [(x, -620821), (y, -433761), ],
    [(x, -9495061), (y, 6949365), ],
    [(x, 4116608), (y, 83672), ],
    [(x, -9403990), (y, 5503621), ],
    [(x, -5650195), (y, -9969396), ],
    [(x, 6091840), (y, 2071797), ],
    [(x, 5071226), (y, -8877378), ],
    [(x, 9643504), (y, -2949988), ],
    [(x, -9672018), (y, -156851), ],
    [(x, 9416402), (y, 4964859), ],
    [(x, 3513261), (y, -2539670), ],
    [(x, -2731322), (y, 8593435), ],
    [(x, 5549853), (y, 658252), ],
    [(x, -5317818), (y, -8612199), ],
    [(x, 9438467), (y, 822713), ],
    [(x, -1287350), (y, -9848636), ],
    [(x, 7257547), (y, -4293356), ],
    [(x, 601955), (y, 3952080), ],
    [(x, 8573888), (y, -9935670), ],
    [(x, 1581001), (y, 3486110), ],
    [(x, 6417291), (y, 7998983), ],
    [(x, 8744244), (y, 1891453), ],
    [(x, 2451436), (y, -1234444), ],
    [(x, 1091305), (y, -9862269), ],
    [(x, -7369675), (y, 933283), ],
    [(x, -7166220), (y, 2082954), ],
    [(x, -2891950), (y, -619612), ],
    [(x, 4916813), (y, 2779239), ],
    [(x, 3760228), (y, 8881384), ],
    [(x, -4092994), (y, 6331984), ],
    [(x, 7772832), (y, -1966590), ],
    [(x, 2179997), (y, 5347245), ],
    [(x, -9642410), (y, 4561447), ],
    [(x, 8571531), (y, 3860912), ],
    [(x, -1019948), (y, 1091475), ],
    [(x, -278333), (y, 4060422), ],
    [(x, -6157562), (y, 3656265), ],
    [(x, -5789197), (y, -9561581), ],
    [(x, 2327102), (y, 5982154), ],
    [(x, -7378847), (y, -5764906), ],
    [(x, 8436360), (y, -5727588), ],
    [(x, -4990413), (y, 3026799), ],
    [(x, 2786752), (y, 4465858), ],
    [(x, -583566), (y, 4744865), ],
    [(x, -9580305), (y, 7241665), ],
    [(x, 2713187), (y, -2579712), ],
    [(x, 3411279), (y, -9577425), ],
    [(x, 5328435), (y, 3544846), ],
    [(x, -3293460), (y, 3991755), ],
    [(x, -7716419), (y, 2629430), ],
    [(x, 516461), (y, 361961), ],
    [(x, 7328141), (y, -9113990), ],
    [(x, 1186452), (y, -2101988), ],
    [(x, -8968589), (y, 9998918), ],
    [(x, -5269829), (y, 4781092), ],
    [(x, 2856026), (y, 2124575), ],
    [(x, -2107636), (y, -2586219), ],
    [(x, -4095981), (y, -6688502), ],
    [(x, 6632539), (y, -2298776), ],
    [(x, -3501454), (y, -6131028), ],
    [(x, -1870221), (y, 2140718), ],
]
for test in tests:
    result = summarizer.solve(test)
    for symbol_val in result:
        print(f"{symbol_val[0]} = {symbol_val[1]}")
