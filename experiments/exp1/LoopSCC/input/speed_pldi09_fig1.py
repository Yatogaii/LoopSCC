from cfg import CFG
from int import INT
from pfg import PFG
from summarizer import Summarizer

x, y = INT.define_int("x"), INT.define_int("y")

loop = CFG.define_loop([[x < 100], [y > 0]], [
    [
        ([[x < 100]], [
            (
                (x, x + 1),
                (y, y + 1),
            )
        ]),
        ([[x >= 100, y > 0]], [
            (
                (y, y - 1),
            )
        ]),
    ]
])

pfg = PFG(loop)
summarizer = Summarizer(pfg)
summarizer.summarize()
tests = [
    [(x, 2346193), (y, -1727328), ],
    [(x, 3830593), (y, 5625657), ],
    [(x, -5790735), (y, 7774674), ],
    [(x, -5238632), (y, -7241698), ],
    [(x, -7837141), (y, 2936885), ],
    [(x, 8394644), (y, -1078318), ],
    [(x, 9972588), (y, 6744515), ],
    [(x, 1471955), (y, -9525145), ],
    [(x, 851205), (y, 7554154), ],
    [(x, -2004542), (y, -1305681), ],
    [(x, -8192198), (y, -9962686), ],
    [(x, -2415531), (y, 5180342), ],
    [(x, 8659788), (y, 5161408), ],
    [(x, 2707261), (y, -6463970), ],
    [(x, -1969162), (y, -1465723), ],
    [(x, 8393814), (y, -6346705), ],
    [(x, -7676540), (y, 1396442), ],
    [(x, -6082055), (y, -8028858), ],
    [(x, 92611), (y, -9777303), ],
    [(x, 19131), (y, 384397), ],
    [(x, -3669110), (y, -5001499), ],
    [(x, -4846888), (y, 8258952), ],
    [(x, 8550915), (y, -6952992), ],
    [(x, 2471995), (y, -2236743), ],
    [(x, -9825084), (y, -9750736), ],
    [(x, 2738996), (y, 3771272), ],
    [(x, -1947180), (y, 9815689), ],
    [(x, -3744215), (y, -3150295), ],
    [(x, -8568152), (y, -1886294), ],
    [(x, 5710413), (y, -8689372), ],
    [(x, -4519098), (y, -3143718), ],
    [(x, -2737677), (y, -1533062), ],
    [(x, 2367063), (y, 8888927), ],
    [(x, -2751711), (y, 3487227), ],
    [(x, 5920432), (y, 1213133), ],
    [(x, 8523108), (y, 1448055), ],
    [(x, -6414129), (y, 7968906), ],
    [(x, -9323843), (y, -7322464), ],
    [(x, -2854416), (y, 9302215), ],
    [(x, 6730801), (y, 3045078), ],
    [(x, 1928144), (y, 4524362), ],
    [(x, 4398946), (y, -6500997), ],
    [(x, 5556292), (y, 7666384), ],
    [(x, -9742976), (y, 5286008), ],
    [(x, 8275810), (y, -5584881), ],
    [(x, -6638698), (y, 6284143), ],
    [(x, -2280466), (y, 1512519), ],
    [(x, -8828805), (y, 5146491), ],
    [(x, -3691984), (y, -6752085), ],
    [(x, 8873156), (y, 2919083), ],
    [(x, -348619), (y, -6864658), ],
    [(x, -2972335), (y, -6490898), ],
    [(x, -7662630), (y, 2225193), ],
    [(x, -5848740), (y, -4827881), ],
    [(x, -4722984), (y, -3271660), ],
    [(x, 8391760), (y, -4751820), ],
    [(x, -9524735), (y, -6254088), ],
    [(x, 1168663), (y, -1613953), ],
    [(x, 4398153), (y, -300767), ],
    [(x, 142416), (y, -3276526), ],
    [(x, -6128883), (y, 6849353), ],
    [(x, -416859), (y, 9743355), ],
    [(x, -3147538), (y, -9462701), ],
    [(x, -3655339), (y, -3663713), ],
    [(x, 5740832), (y, -1694931), ],
    [(x, 2531651), (y, -5519516), ],
    [(x, -2573852), (y, 294429), ],
    [(x, 1957591), (y, -7286638), ],
    [(x, -2130801), (y, 2014324), ],
    [(x, -5613903), (y, -947464), ],
    [(x, -266393), (y, 8410246), ],
    [(x, 1493142), (y, 4380078), ],
    [(x, 926286), (y, -5792585), ],
    [(x, -1043075), (y, 2386770), ],
    [(x, -8136855), (y, -1279885), ],
    [(x, 6929817), (y, -7226290), ],
    [(x, -8179474), (y, -177394), ],
    [(x, 2419986), (y, -5658815), ],
    [(x, 2420598), (y, -5144410), ],
    [(x, 9056637), (y, -243011), ],
    [(x, 7079250), (y, -4080787), ],
    [(x, -890917), (y, 6634351), ],
    [(x, 2352368), (y, -6703780), ],
    [(x, -3161668), (y, 8587785), ],
    [(x, -1184843), (y, -2900276), ],
    [(x, 36900), (y, -2430887), ],
    [(x, -9322329), (y, 8054698), ],
    [(x, -9509973), (y, 3486337), ],
    [(x, 1264929), (y, 6640540), ],
    [(x, 8310072), (y, -9508695), ],
    [(x, 8248209), (y, -1792468), ],
    [(x, -469546), (y, -1045743), ],
    [(x, 3094493), (y, -8085084), ],
    [(x, 7483876), (y, -4819393), ],
    [(x, -5569470), (y, -1891766), ],
    [(x, 6263457), (y, -7677662), ],
    [(x, 3611275), (y, -3112389), ],
    [(x, 4019472), (y, 7719153), ],
    [(x, 8645093), (y, -7177849), ],
    [(x, 7810048), (y, -1947380), ],
]
for test in tests:
    result = summarizer.solve(test)
    for symbol_val in result:
        print(f"{symbol_val[0]} = {symbol_val[1]}")
