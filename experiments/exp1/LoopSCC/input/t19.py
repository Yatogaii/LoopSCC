from cfg import CFG
from int import INT
from pfg import PFG
from summarizer import Summarizer

i, k = INT.define_int("i"), INT.define_int("k")

var_map = {"i": i, "k": k}

loop1 = CFG.define_loop([[i > 100]], [
    [
        ([[i == i]], [
            (
                (i, i - 1),
            )
        ]),
    ]
])

loop2 = CFG.define_loop([[i >= 0]], [
    [
        ([[i == i]], [
            (
                (i, i - 1),
            )
        ]),
    ]
])

pfg = PFG(loop1)
summarizer = Summarizer(pfg)
summarizer.summarize()

pfg2 = PFG(loop2)
summarizer2 = Summarizer(pfg2)
summarizer2.summarize()
tests = [
    [(i, -1262745), (k, 910070), ],
    [(i, -4576854), (k, 2219447), ],
    [(i, -8156987), (k, -3964437), ],
    [(i, 4231374), (k, 9877047), ],
    [(i, -4861251), (k, -3374687), ],
    [(i, 4661351), (k, -8624924), ],
    [(i, -4344170), (k, 7141078), ],
    [(i, 7738938), (k, -4865211), ],
    [(i, -2656111), (k, -6466798), ],
    [(i, -7123696), (k, -6646360), ],
    [(i, -557310), (k, 6037390), ],
    [(i, 5023420), (k, 8234364), ],
    [(i, 4990450), (k, 9620491), ],
    [(i, 2492723), (k, 7711920), ],
    [(i, 2856950), (k, -1656358), ],
    [(i, -7500663), (k, 2058663), ],
    [(i, -2190007), (k, 3405169), ],
    [(i, -1400883), (k, -2870061), ],
    [(i, 5514119), (k, -7559666), ],
    [(i, 8373908), (k, 4039716), ],
    [(i, -663037), (k, -4506249), ],
    [(i, 272488), (k, -1701354), ],
    [(i, -5345836), (k, 4995749), ],
    [(i, 6383888), (k, 6276484), ],
    [(i, 820083), (k, 2821619), ],
    [(i, 1688780), (k, -4182312), ],
    [(i, 5128355), (k, -4054433), ],
    [(i, -8951872), (k, -8486300), ],
    [(i, -278001), (k, 2746845), ],
    [(i, 9886929), (k, 3314442), ],
    [(i, 8295542), (k, -26692), ],
    [(i, 8495707), (k, 6634963), ],
    [(i, -2944758), (k, -6412940), ],
    [(i, -2542557), (k, 5775739), ],
    [(i, -7979417), (k, 9480218), ],
    [(i, -755425), (k, 4301312), ],
    [(i, -7601492), (k, -2223150), ],
    [(i, 5368184), (k, 5108610), ],
    [(i, -3255528), (k, 1972919), ],
    [(i, 3019373), (k, 5791840), ],
    [(i, -7332039), (k, 1974791), ],
    [(i, -2607022), (k, 584307), ],
    [(i, 6437433), (k, 4296473), ],
    [(i, 9579014), (k, 1201266), ],
    [(i, 5710695), (k, 7145081), ],
    [(i, 7212323), (k, 1973014), ],
    [(i, 6445659), (k, -649868), ],
    [(i, 3167557), (k, -2328402), ],
    [(i, 4050032), (k, 9243878), ],
    [(i, -4475691), (k, -3847374), ],
    [(i, -8390096), (k, -7851073), ],
    [(i, -6775399), (k, -5368660), ],
    [(i, 8485565), (k, -4681241), ],
    [(i, -3829311), (k, 3718835), ],
    [(i, 9991870), (k, -7668615), ],
    [(i, -77611), (k, -1107288), ],
    [(i, 9630773), (k, -5435706), ],
    [(i, -6029080), (k, -2958322), ],
    [(i, 1430210), (k, 5023302), ],
    [(i, 9572018), (k, -3978030), ],
    [(i, -9025220), (k, 2932781), ],
    [(i, 1376633), (k, 673530), ],
    [(i, 8767018), (k, 2051103), ],
    [(i, -6422301), (k, -2787108), ],
    [(i, 5150672), (k, 6596763), ],
    [(i, 3430301), (k, 9740391), ],
    [(i, -3878398), (k, -8569457), ],
    [(i, -7784944), (k, -1542880), ],
    [(i, 7124375), (k, -9829438), ],
    [(i, -7558329), (k, 5750729), ],
    [(i, -5010756), (k, 7544949), ],
    [(i, 5865254), (k, -9130125), ],
    [(i, -2261385), (k, 1681805), ],
    [(i, 975830), (k, -2607817), ],
    [(i, -2339713), (k, -5260281), ],
    [(i, 7947048), (k, -2546800), ],
    [(i, -1825664), (k, 1577216), ],
    [(i, -6233096), (k, 2526399), ],
    [(i, 7891581), (k, 3278285), ],
    [(i, -1869627), (k, -7290381), ],
    [(i, -3355182), (k, -3146440), ],
    [(i, -505037), (k, 5261293), ],
    [(i, 3838713), (k, -5022633), ],
    [(i, 7969469), (k, 1933372), ],
    [(i, -6191660), (k, -2854375), ],
    [(i, 2405515), (k, -7322594), ],
    [(i, 8211184), (k, 1899951), ],
    [(i, -2891916), (k, 414755), ],
    [(i, -2887660), (k, 3018361), ],
    [(i, 78567), (k, -1632275), ],
    [(i, -2746410), (k, -6581374), ],
    [(i, -1661330), (k, 1324273), ],
    [(i, -4529275), (k, -197571), ],
    [(i, -3232361), (k, 1850783), ],
    [(i, 7654864), (k, -5170199), ],
    [(i, -6833142), (k, -923404), ],
    [(i, 7288135), (k, 660791), ],
    [(i, 6373771), (k, -4732275), ],
    [(i, -3780749), (k, -6546302), ],
    [(i, -1406535), (k, 6314288), ],
]
for test in tests:
    # res1 = List[tuple('symbol_name', 'symbol_var')]
    res1 = summarizer.solve(test)

    # temp = temp + k + 50;

    input2 = []
    var_i = res1[0]

    input2.append((var_map[var_i[0]], int(var_i[1]) + test[1][1] + 50))

    result = summarizer2.solve(input2)
    i_val = result[0][1]
    print(f"i = {i_val}")
