from cfg import CFG
from int import INT
from spath_graph import SPath_Graph
from summarizer import Summarizer

x, y, z = INT.define_int("x"), INT.define_int("y"), INT.define_int("z")

loop = CFG.define_loop([[x > y]], [
    (
        (x, x - y - 1),
        (z, y),
    ),
    [
        ([[z > 0]], [
            (
                (z, 0),
            )
        ]),
        ([[z <= 0]], [
            ()
        ]),
    ],
])

spg = SPath_Graph(loop)
summarizer = Summarizer(spg)
summarizer.summarize()
# y>=0
tests = [
    [(x, -3598621), (y, 1806818), ],
    [(x, -3392088), (y, 6305989), ],
    [(x, -6729297), (y, 9390619), ],
    [(x, -9119665), (y, 2645393), ],
    [(x, -7401814), (y, 3653105), ],
    [(x, 7515521), (y, 3981227), ],
    [(x, -8311018), (y, 2580036), ],
    [(x, 1139619), (y, 5025708), ],
    [(x, 2123320), (y, 99775), ],
    [(x, 1414), (y, 5181308), ],
    [(x, -4103715), (y, 538548), ],
    [(x, -4846017), (y, 5592565), ],
    [(x, -6322519), (y, 6604126), ],
    [(x, -7981442), (y, 6349599), ],
    [(x, -2209753), (y, 9799556), ],
    [(x, -2002502), (y, 7199607), ],
    [(x, -9293606), (y, 9480996), ],
    [(x, 9353207), (y, 3692446), ],
    [(x, -6089778), (y, 1344953), ],
    [(x, -4280552), (y, 2843649), ],
    [(x, 3441898), (y, 5790822), ],
    [(x, -9140001), (y, 2168819), ],
    [(x, -2271074), (y, 7746819), ],
    [(x, 8663321), (y, 8246339), ],
    [(x, 8462695), (y, 5642072), ],
    [(x, -5473913), (y, 1069188), ],
    [(x, 1081763), (y, 7718152), ],
    [(x, 6470932), (y, 2963927), ],
    [(x, 6098455), (y, 3213403), ],
    [(x, 1955203), (y, 3526137), ],
    [(x, -9371039), (y, 1321160), ],
    [(x, 3342849), (y, 1099337), ],
    [(x, -2950750), (y, 143335), ],
    [(x, 1887434), (y, 2604195), ],
    [(x, -4498910), (y, 474099), ],
    [(x, -7668976), (y, 4035835), ],
    [(x, -663063), (y, 4907107), ],
    [(x, -624345), (y, 1284086), ],
    [(x, -2605785), (y, 8811677), ],
    [(x, 8192499), (y, 385451), ],
    [(x, 8802345), (y, 3155615), ],
    [(x, 4748533), (y, 7718111), ],
    [(x, -2685089), (y, 8614714), ],
    [(x, -6928427), (y, 8444459), ],
    [(x, 4681773), (y, 4103269), ],
    [(x, -7406843), (y, 3933860), ],
    [(x, 528381), (y, 7605856), ],
    [(x, -4510227), (y, 4764320), ],
    [(x, -3626450), (y, 5092755), ],
    [(x, -8986034), (y, 5162769), ],
    [(x, 5631733), (y, 2592673), ],
    [(x, -1251574), (y, 1553417), ],
    [(x, -3445394), (y, 1263847), ],
    [(x, 3567112), (y, 4956139), ],
    [(x, 9386547), (y, 3396337), ],
    [(x, 4498765), (y, 4020538), ],
    [(x, -9150120), (y, 431088), ],
    [(x, 2716602), (y, 5631560), ],
    [(x, 2456298), (y, 2673122), ],
    [(x, 8792558), (y, 2411066), ],
    [(x, -3679737), (y, 5871855), ],
    [(x, -6083635), (y, 2531487), ],
    [(x, 3740045), (y, 7585212), ],
    [(x, -9786159), (y, 5626898), ],
    [(x, -1344074), (y, 1557077), ],
    [(x, -1187419), (y, 543577), ],
    [(x, 1697804), (y, 3618305), ],
    [(x, -7424438), (y, 9535885), ],
    [(x, 9000971), (y, 1456530), ],
    [(x, -6647648), (y, 153519), ],
    [(x, 1128859), (y, 5833868), ],
    [(x, -623931), (y, 970383), ],
    [(x, 4413838), (y, 7319993), ],
    [(x, -2784637), (y, 1667754), ],
    [(x, -8096233), (y, 9682817), ],
    [(x, 8815329), (y, 3373947), ],
    [(x, -242181), (y, 4734901), ],
    [(x, 3144822), (y, 6450272), ],
    [(x, 5147920), (y, 6520225), ],
    [(x, 9528379), (y, 6000146), ],
    [(x, 1494729), (y, 3739679), ],
    [(x, -5126691), (y, 9316915), ],
    [(x, 4579434), (y, 664563), ],
    [(x, -5673122), (y, 8939443), ],
    [(x, -1196148), (y, 7268719), ],
    [(x, 5796140), (y, 7712907), ],
    [(x, -4679598), (y, 3096177), ],
    [(x, 5028381), (y, 6773435), ],
    [(x, 3404073), (y, 3667028), ],
    [(x, -7229755), (y, 3779573), ],
    [(x, -270017), (y, 756801), ],
    [(x, 1638795), (y, 3105464), ],
    [(x, 4107885), (y, 8622719), ],
    [(x, -3200796), (y, 9805638), ],
    [(x, 948710), (y, 9956133), ],
    [(x, -8286760), (y, 7301640), ],
    [(x, -1768931), (y, 3142217), ],
    [(x, -5847228), (y, 8896110), ],
    [(x, 9682659), (y, 6810541), ],
    [(x, 7797367), (y, 3752946), ],
]
for test in tests:
    result = summarizer.solve(test)

    if len(result) == 3:
        x_val = result[0][1]
        z_val = result[2][1]
    else:
        x_val = result[0][1]
        z_val = 0
    print(f"x = {x_val}")
    print(f"z = {z_val}")
